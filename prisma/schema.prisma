// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id
  username String @unique
}

model Student {
  id        String   @id
  username  String   @unique
  name      String
  surname   String
  email     String?
  phone     String?
  address   String
  img       String?
  bloodType String
  sex       UserSex
  createdAt DateTime @default(now())
  parentId  String
  parent    Parent   @relation(fields: [parentId], references: [id])
  classId   Int
  class     Class    @relation(fields: [classId], references: [id])
}

model Teacher {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?
  phone     String?
  address   String
  img       String?
  bloodType String
  sex       UserSex
  createdAt DateTime  @default(now())
  subject   Subject[]
  lessons   Lesson[]
  classes   Class[]
}

model Parent {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?
  phone     String?
  address   String
  createdAt DateTime  @default(now())
  students  Student[]
}

// model Grade {}

model Class {
  id       Int    @id @default(autoincrement())
  name     String @unique
  capacity Int

  supervisorId String
  supervisor   Teacher   @relation(fields: [supervisorId], references: [id])
  lessons      Lesson[]
  student      Student[]
}

model Subject {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  teachers Teacher[]
  lesson   Lesson[]
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name      String
  day       Day
  startTine DateTime
  endTIme   DateTime

  subjectId Int

  subject   Subject @relation(fields: [subjectId], references: [id])
  classId   Int
  class     Class   @relation(fields: [classId], references: [id])
  teacherId String
  teacher   Teacher @relation(fields: [teacherId], references: [id])
}

// model Exam {}

// model Assignment {}

// model Attendance {}

// model Events {}

// model Announcements {}

enum UserSex {
  MALE
  FEMALE
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum Day2 {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}
